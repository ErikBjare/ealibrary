___ DESIGN ___
- När en användare är inloggad, ersätt sign-up-knappen med en plus-knapp (lägg till bok-knapp)

___ KOD ___

- Flytta all bokinformation till separat fil
- Spara bokratings till fil och observera ändringar i filen
- Refaktorisera.
  - Irrelevanta variabelnamn
  - Onödiga id
- Bestäm färgpalett

___ FUNKTIONALITET ___

- Registrering av användare
- Inloggning
- Lägga till bok
- Låna en bok

Följande struktur är förslag. Om du ser effektivare lösningar, vänligen ersätt nuvarande (del)struktur
med din lösning! :)

___ DATASTRUKTUR ___

Bok
  - Författare
  - Titel
  - Genre / tags
  - Max lånetid
  - Bokomslag
  - Betyg
  - Stad
  - Lista på användare som lånar ut boken

Användare
  - Namn
  - Lösenord
  - Telefonnummer
  - Mail
  - Stad
  - Karma
  - Brottsregister

Användarklasser
  - Buddha (admin)
    - Kan ta bort böcker
    - Kan deaktivera användare (om brottsregistret har fler än 3 brott)
    - Kan redigera bokinformation
  - Bodhisattva (power user)
    - Kan redigera bokinformation
    - Kan lägga till ett brott i en användares brottsregister
  - Munk (user)

Brottsregister
  - Består av en lista med olika brott
  - Efter att en användare har en lista på över 3 brott notifieras en Buddha

Karma
  + om bok lånas ut
  + om bok lämnas tillbaka
  + om bok till utlånes
  + om bok lånas
  -/+ 50 beroende på långivares omdöme
  -/+ beroende på låntagares omdöme
  +karma/dag = antal sidor * ( 0.25 + ( 0.6 * ln(1+hur länge har boken varit till utlånes) / ((antal användare som lånar ut samma bok i samma stad)^0.6) ) )
  -karma/dag = antal sidor * ( 0.5 + ( 0.6 * ln(1+hur länge har inlämningsdeadline överträtts) / ((antal användare som lånar ut samma bok i samma stad)^0.6) ) )
Databas
  - En HashMap/Dictionary för inlagda städer
  - En HashMap/Dictionary för varje stad
    - Boktitel är key
    - Bok-objekt är value
